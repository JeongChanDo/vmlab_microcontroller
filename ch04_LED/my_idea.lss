
my_idea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000400  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000408  00000000  00000000  00000454  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000070f  00000000  00000000  0000085c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e0       	ldi	r30, 0x00	; 0
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:
#include <avr\io.h>              // Most basic include files
#include <util\delay.h>



int main(void) {
  be:	df 93       	push	r29
  c0:	cf 93       	push	r28
  c2:	cd b7       	in	r28, 0x3d	; 61
  c4:	de b7       	in	r29, 0x3e	; 62
  c6:	2f 97       	sbiw	r28, 0x0f	; 15
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	f8 94       	cli
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	cd bf       	out	0x3d, r28	; 61
	unsigned char led = 0xFE;
  d2:	8e ef       	ldi	r24, 0xFE	; 254
  d4:	8f 87       	std	Y+15, r24	; 0x0f
   DDRC=0xFF;
  d6:	e4 e3       	ldi	r30, 0x34	; 52
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	80 83       	st	Z, r24
   while(1) {
   	PORTC=led;
  de:	e5 e3       	ldi	r30, 0x35	; 53
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	8f 85       	ldd	r24, Y+15	; 0x0f
  e4:	80 83       	st	Z, r24
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	a8 e4       	ldi	r26, 0x48	; 72
  ec:	b3 e4       	ldi	r27, 0x43	; 67
  ee:	8b 87       	std	Y+11, r24	; 0x0b
  f0:	9c 87       	std	Y+12, r25	; 0x0c
  f2:	ad 87       	std	Y+13, r26	; 0x0d
  f4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  f6:	6b 85       	ldd	r22, Y+11	; 0x0b
  f8:	7c 85       	ldd	r23, Y+12	; 0x0c
  fa:	8d 85       	ldd	r24, Y+13	; 0x0d
  fc:	9e 85       	ldd	r25, Y+14	; 0x0e
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	4a e7       	ldi	r20, 0x7A	; 122
 104:	53 e4       	ldi	r21, 0x43	; 67
 106:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__mulsf3>
 10a:	dc 01       	movw	r26, r24
 10c:	cb 01       	movw	r24, r22
 10e:	8f 83       	std	Y+7, r24	; 0x07
 110:	98 87       	std	Y+8, r25	; 0x08
 112:	a9 87       	std	Y+9, r26	; 0x09
 114:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 116:	6f 81       	ldd	r22, Y+7	; 0x07
 118:	78 85       	ldd	r23, Y+8	; 0x08
 11a:	89 85       	ldd	r24, Y+9	; 0x09
 11c:	9a 85       	ldd	r25, Y+10	; 0x0a
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e8       	ldi	r20, 0x80	; 128
 124:	5f e3       	ldi	r21, 0x3F	; 63
 126:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <__cmpsf2>
 12a:	88 23       	and	r24, r24
 12c:	2c f4       	brge	.+10     	; 0x138 <main+0x7a>
		__ticks = 1;
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	9e 83       	std	Y+6, r25	; 0x06
 134:	8d 83       	std	Y+5, r24	; 0x05
 136:	3f c0       	rjmp	.+126    	; 0x1b6 <main+0xf8>
	else if (__tmp > 65535)
 138:	6f 81       	ldd	r22, Y+7	; 0x07
 13a:	78 85       	ldd	r23, Y+8	; 0x08
 13c:	89 85       	ldd	r24, Y+9	; 0x09
 13e:	9a 85       	ldd	r25, Y+10	; 0x0a
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	3f ef       	ldi	r19, 0xFF	; 255
 144:	4f e7       	ldi	r20, 0x7F	; 127
 146:	57 e4       	ldi	r21, 0x47	; 71
 148:	0e 94 6f 01 	call	0x2de	; 0x2de <__gesf2>
 14c:	18 16       	cp	r1, r24
 14e:	4c f5       	brge	.+82     	; 0x1a2 <main+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 150:	6b 85       	ldd	r22, Y+11	; 0x0b
 152:	7c 85       	ldd	r23, Y+12	; 0x0c
 154:	8d 85       	ldd	r24, Y+13	; 0x0d
 156:	9e 85       	ldd	r25, Y+14	; 0x0e
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	40 e2       	ldi	r20, 0x20	; 32
 15e:	51 e4       	ldi	r21, 0x41	; 65
 160:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__mulsf3>
 164:	dc 01       	movw	r26, r24
 166:	cb 01       	movw	r24, r22
 168:	bc 01       	movw	r22, r24
 16a:	cd 01       	movw	r24, r26
 16c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__fixunssfsi>
 170:	dc 01       	movw	r26, r24
 172:	cb 01       	movw	r24, r22
 174:	9e 83       	std	Y+6, r25	; 0x06
 176:	8d 83       	std	Y+5, r24	; 0x05
 178:	0f c0       	rjmp	.+30     	; 0x198 <main+0xda>
 17a:	89 e1       	ldi	r24, 0x19	; 25
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	9c 83       	std	Y+4, r25	; 0x04
 180:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 182:	8b 81       	ldd	r24, Y+3	; 0x03
 184:	9c 81       	ldd	r25, Y+4	; 0x04
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <main+0xc8>
 18a:	9c 83       	std	Y+4, r25	; 0x04
 18c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 18e:	8d 81       	ldd	r24, Y+5	; 0x05
 190:	9e 81       	ldd	r25, Y+6	; 0x06
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	9e 83       	std	Y+6, r25	; 0x06
 196:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 198:	8d 81       	ldd	r24, Y+5	; 0x05
 19a:	9e 81       	ldd	r25, Y+6	; 0x06
 19c:	00 97       	sbiw	r24, 0x00	; 0
 19e:	69 f7       	brne	.-38     	; 0x17a <main+0xbc>
 1a0:	14 c0       	rjmp	.+40     	; 0x1ca <main+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1a2:	6f 81       	ldd	r22, Y+7	; 0x07
 1a4:	78 85       	ldd	r23, Y+8	; 0x08
 1a6:	89 85       	ldd	r24, Y+9	; 0x09
 1a8:	9a 85       	ldd	r25, Y+10	; 0x0a
 1aa:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__fixunssfsi>
 1ae:	dc 01       	movw	r26, r24
 1b0:	cb 01       	movw	r24, r22
 1b2:	9e 83       	std	Y+6, r25	; 0x06
 1b4:	8d 83       	std	Y+5, r24	; 0x05
 1b6:	8d 81       	ldd	r24, Y+5	; 0x05
 1b8:	9e 81       	ldd	r25, Y+6	; 0x06
 1ba:	9a 83       	std	Y+2, r25	; 0x02
 1bc:	89 83       	std	Y+1, r24	; 0x01
 1be:	89 81       	ldd	r24, Y+1	; 0x01
 1c0:	9a 81       	ldd	r25, Y+2	; 0x02
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <main+0x104>
 1c6:	9a 83       	std	Y+2, r25	; 0x02
 1c8:	89 83       	std	Y+1, r24	; 0x01
   	_delay_ms(200);
   	led <<=1;
 1ca:	8f 85       	ldd	r24, Y+15	; 0x0f
 1cc:	88 0f       	add	r24, r24
 1ce:	8f 87       	std	Y+15, r24	; 0x0f
   	led |= 0x01;
 1d0:	8f 85       	ldd	r24, Y+15	; 0x0f
 1d2:	81 60       	ori	r24, 0x01	; 1
 1d4:	8f 87       	std	Y+15, r24	; 0x0f
   	
   	if (led == 0xFF) led=0xFE;
 1d6:	8f 85       	ldd	r24, Y+15	; 0x0f
 1d8:	8f 3f       	cpi	r24, 0xFF	; 255
 1da:	09 f0       	breq	.+2      	; 0x1de <main+0x120>
 1dc:	80 cf       	rjmp	.-256    	; 0xde <main+0x20>
 1de:	8e ef       	ldi	r24, 0xFE	; 254
 1e0:	8f 87       	std	Y+15, r24	; 0x0f
 1e2:	7d cf       	rjmp	.-262    	; 0xde <main+0x20>

000001e4 <__cmpsf2>:
 1e4:	2f d0       	rcall	.+94     	; 0x244 <__fp_cmp>
 1e6:	08 f4       	brcc	.+2      	; 0x1ea <__cmpsf2+0x6>
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	08 95       	ret

000001ec <__fixunssfsi>:
 1ec:	57 d0       	rcall	.+174    	; 0x29c <__fp_splitA>
 1ee:	88 f0       	brcs	.+34     	; 0x212 <__fixunssfsi+0x26>
 1f0:	9f 57       	subi	r25, 0x7F	; 127
 1f2:	90 f0       	brcs	.+36     	; 0x218 <__fixunssfsi+0x2c>
 1f4:	b9 2f       	mov	r27, r25
 1f6:	99 27       	eor	r25, r25
 1f8:	b7 51       	subi	r27, 0x17	; 23
 1fa:	a0 f0       	brcs	.+40     	; 0x224 <__fixunssfsi+0x38>
 1fc:	d1 f0       	breq	.+52     	; 0x232 <__fixunssfsi+0x46>
 1fe:	66 0f       	add	r22, r22
 200:	77 1f       	adc	r23, r23
 202:	88 1f       	adc	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	1a f0       	brmi	.+6      	; 0x20e <__fixunssfsi+0x22>
 208:	ba 95       	dec	r27
 20a:	c9 f7       	brne	.-14     	; 0x1fe <__fixunssfsi+0x12>
 20c:	12 c0       	rjmp	.+36     	; 0x232 <__fixunssfsi+0x46>
 20e:	b1 30       	cpi	r27, 0x01	; 1
 210:	81 f0       	breq	.+32     	; 0x232 <__fixunssfsi+0x46>
 212:	5e d0       	rcall	.+188    	; 0x2d0 <__fp_zero>
 214:	b1 e0       	ldi	r27, 0x01	; 1
 216:	08 95       	ret
 218:	5b c0       	rjmp	.+182    	; 0x2d0 <__fp_zero>
 21a:	67 2f       	mov	r22, r23
 21c:	78 2f       	mov	r23, r24
 21e:	88 27       	eor	r24, r24
 220:	b8 5f       	subi	r27, 0xF8	; 248
 222:	39 f0       	breq	.+14     	; 0x232 <__fixunssfsi+0x46>
 224:	b9 3f       	cpi	r27, 0xF9	; 249
 226:	cc f3       	brlt	.-14     	; 0x21a <__fixunssfsi+0x2e>
 228:	86 95       	lsr	r24
 22a:	77 95       	ror	r23
 22c:	67 95       	ror	r22
 22e:	b3 95       	inc	r27
 230:	d9 f7       	brne	.-10     	; 0x228 <__fixunssfsi+0x3c>
 232:	3e f4       	brtc	.+14     	; 0x242 <__fixunssfsi+0x56>
 234:	90 95       	com	r25
 236:	80 95       	com	r24
 238:	70 95       	com	r23
 23a:	61 95       	neg	r22
 23c:	7f 4f       	sbci	r23, 0xFF	; 255
 23e:	8f 4f       	sbci	r24, 0xFF	; 255
 240:	9f 4f       	sbci	r25, 0xFF	; 255
 242:	08 95       	ret

00000244 <__fp_cmp>:
 244:	99 0f       	add	r25, r25
 246:	00 08       	sbc	r0, r0
 248:	55 0f       	add	r21, r21
 24a:	aa 0b       	sbc	r26, r26
 24c:	e0 e8       	ldi	r30, 0x80	; 128
 24e:	fe ef       	ldi	r31, 0xFE	; 254
 250:	16 16       	cp	r1, r22
 252:	17 06       	cpc	r1, r23
 254:	e8 07       	cpc	r30, r24
 256:	f9 07       	cpc	r31, r25
 258:	c0 f0       	brcs	.+48     	; 0x28a <__fp_cmp+0x46>
 25a:	12 16       	cp	r1, r18
 25c:	13 06       	cpc	r1, r19
 25e:	e4 07       	cpc	r30, r20
 260:	f5 07       	cpc	r31, r21
 262:	98 f0       	brcs	.+38     	; 0x28a <__fp_cmp+0x46>
 264:	62 1b       	sub	r22, r18
 266:	73 0b       	sbc	r23, r19
 268:	84 0b       	sbc	r24, r20
 26a:	95 0b       	sbc	r25, r21
 26c:	39 f4       	brne	.+14     	; 0x27c <__fp_cmp+0x38>
 26e:	0a 26       	eor	r0, r26
 270:	61 f0       	breq	.+24     	; 0x28a <__fp_cmp+0x46>
 272:	23 2b       	or	r18, r19
 274:	24 2b       	or	r18, r20
 276:	25 2b       	or	r18, r21
 278:	21 f4       	brne	.+8      	; 0x282 <__fp_cmp+0x3e>
 27a:	08 95       	ret
 27c:	0a 26       	eor	r0, r26
 27e:	09 f4       	brne	.+2      	; 0x282 <__fp_cmp+0x3e>
 280:	a1 40       	sbci	r26, 0x01	; 1
 282:	a6 95       	lsr	r26
 284:	8f ef       	ldi	r24, 0xFF	; 255
 286:	81 1d       	adc	r24, r1
 288:	81 1d       	adc	r24, r1
 28a:	08 95       	ret

0000028c <__fp_split3>:
 28c:	57 fd       	sbrc	r21, 7
 28e:	90 58       	subi	r25, 0x80	; 128
 290:	44 0f       	add	r20, r20
 292:	55 1f       	adc	r21, r21
 294:	59 f0       	breq	.+22     	; 0x2ac <__fp_splitA+0x10>
 296:	5f 3f       	cpi	r21, 0xFF	; 255
 298:	71 f0       	breq	.+28     	; 0x2b6 <__fp_splitA+0x1a>
 29a:	47 95       	ror	r20

0000029c <__fp_splitA>:
 29c:	88 0f       	add	r24, r24
 29e:	97 fb       	bst	r25, 7
 2a0:	99 1f       	adc	r25, r25
 2a2:	61 f0       	breq	.+24     	; 0x2bc <__fp_splitA+0x20>
 2a4:	9f 3f       	cpi	r25, 0xFF	; 255
 2a6:	79 f0       	breq	.+30     	; 0x2c6 <__fp_splitA+0x2a>
 2a8:	87 95       	ror	r24
 2aa:	08 95       	ret
 2ac:	12 16       	cp	r1, r18
 2ae:	13 06       	cpc	r1, r19
 2b0:	14 06       	cpc	r1, r20
 2b2:	55 1f       	adc	r21, r21
 2b4:	f2 cf       	rjmp	.-28     	; 0x29a <__fp_split3+0xe>
 2b6:	46 95       	lsr	r20
 2b8:	f1 df       	rcall	.-30     	; 0x29c <__fp_splitA>
 2ba:	08 c0       	rjmp	.+16     	; 0x2cc <__fp_splitA+0x30>
 2bc:	16 16       	cp	r1, r22
 2be:	17 06       	cpc	r1, r23
 2c0:	18 06       	cpc	r1, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	f1 cf       	rjmp	.-30     	; 0x2a8 <__fp_splitA+0xc>
 2c6:	86 95       	lsr	r24
 2c8:	71 05       	cpc	r23, r1
 2ca:	61 05       	cpc	r22, r1
 2cc:	08 94       	sec
 2ce:	08 95       	ret

000002d0 <__fp_zero>:
 2d0:	e8 94       	clt

000002d2 <__fp_szero>:
 2d2:	bb 27       	eor	r27, r27
 2d4:	66 27       	eor	r22, r22
 2d6:	77 27       	eor	r23, r23
 2d8:	cb 01       	movw	r24, r22
 2da:	97 f9       	bld	r25, 7
 2dc:	08 95       	ret

000002de <__gesf2>:
 2de:	b2 df       	rcall	.-156    	; 0x244 <__fp_cmp>
 2e0:	08 f4       	brcc	.+2      	; 0x2e4 <__gesf2+0x6>
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	08 95       	ret

000002e6 <__mulsf3>:
 2e6:	0b d0       	rcall	.+22     	; 0x2fe <__mulsf3x>
 2e8:	78 c0       	rjmp	.+240    	; 0x3da <__fp_round>
 2ea:	69 d0       	rcall	.+210    	; 0x3be <__fp_pscA>
 2ec:	28 f0       	brcs	.+10     	; 0x2f8 <__mulsf3+0x12>
 2ee:	6e d0       	rcall	.+220    	; 0x3cc <__fp_pscB>
 2f0:	18 f0       	brcs	.+6      	; 0x2f8 <__mulsf3+0x12>
 2f2:	95 23       	and	r25, r21
 2f4:	09 f0       	breq	.+2      	; 0x2f8 <__mulsf3+0x12>
 2f6:	5a c0       	rjmp	.+180    	; 0x3ac <__fp_inf>
 2f8:	5f c0       	rjmp	.+190    	; 0x3b8 <__fp_nan>
 2fa:	11 24       	eor	r1, r1
 2fc:	ea cf       	rjmp	.-44     	; 0x2d2 <__fp_szero>

000002fe <__mulsf3x>:
 2fe:	c6 df       	rcall	.-116    	; 0x28c <__fp_split3>
 300:	a0 f3       	brcs	.-24     	; 0x2ea <__mulsf3+0x4>

00000302 <__mulsf3_pse>:
 302:	95 9f       	mul	r25, r21
 304:	d1 f3       	breq	.-12     	; 0x2fa <__mulsf3+0x14>
 306:	95 0f       	add	r25, r21
 308:	50 e0       	ldi	r21, 0x00	; 0
 30a:	55 1f       	adc	r21, r21
 30c:	62 9f       	mul	r22, r18
 30e:	f0 01       	movw	r30, r0
 310:	72 9f       	mul	r23, r18
 312:	bb 27       	eor	r27, r27
 314:	f0 0d       	add	r31, r0
 316:	b1 1d       	adc	r27, r1
 318:	63 9f       	mul	r22, r19
 31a:	aa 27       	eor	r26, r26
 31c:	f0 0d       	add	r31, r0
 31e:	b1 1d       	adc	r27, r1
 320:	aa 1f       	adc	r26, r26
 322:	64 9f       	mul	r22, r20
 324:	66 27       	eor	r22, r22
 326:	b0 0d       	add	r27, r0
 328:	a1 1d       	adc	r26, r1
 32a:	66 1f       	adc	r22, r22
 32c:	82 9f       	mul	r24, r18
 32e:	22 27       	eor	r18, r18
 330:	b0 0d       	add	r27, r0
 332:	a1 1d       	adc	r26, r1
 334:	62 1f       	adc	r22, r18
 336:	73 9f       	mul	r23, r19
 338:	b0 0d       	add	r27, r0
 33a:	a1 1d       	adc	r26, r1
 33c:	62 1f       	adc	r22, r18
 33e:	83 9f       	mul	r24, r19
 340:	a0 0d       	add	r26, r0
 342:	61 1d       	adc	r22, r1
 344:	22 1f       	adc	r18, r18
 346:	74 9f       	mul	r23, r20
 348:	33 27       	eor	r19, r19
 34a:	a0 0d       	add	r26, r0
 34c:	61 1d       	adc	r22, r1
 34e:	23 1f       	adc	r18, r19
 350:	84 9f       	mul	r24, r20
 352:	60 0d       	add	r22, r0
 354:	21 1d       	adc	r18, r1
 356:	82 2f       	mov	r24, r18
 358:	76 2f       	mov	r23, r22
 35a:	6a 2f       	mov	r22, r26
 35c:	11 24       	eor	r1, r1
 35e:	9f 57       	subi	r25, 0x7F	; 127
 360:	50 40       	sbci	r21, 0x00	; 0
 362:	8a f0       	brmi	.+34     	; 0x386 <__mulsf3_pse+0x84>
 364:	e1 f0       	breq	.+56     	; 0x39e <__mulsf3_pse+0x9c>
 366:	88 23       	and	r24, r24
 368:	4a f0       	brmi	.+18     	; 0x37c <__mulsf3_pse+0x7a>
 36a:	ee 0f       	add	r30, r30
 36c:	ff 1f       	adc	r31, r31
 36e:	bb 1f       	adc	r27, r27
 370:	66 1f       	adc	r22, r22
 372:	77 1f       	adc	r23, r23
 374:	88 1f       	adc	r24, r24
 376:	91 50       	subi	r25, 0x01	; 1
 378:	50 40       	sbci	r21, 0x00	; 0
 37a:	a9 f7       	brne	.-22     	; 0x366 <__mulsf3_pse+0x64>
 37c:	9e 3f       	cpi	r25, 0xFE	; 254
 37e:	51 05       	cpc	r21, r1
 380:	70 f0       	brcs	.+28     	; 0x39e <__mulsf3_pse+0x9c>
 382:	14 c0       	rjmp	.+40     	; 0x3ac <__fp_inf>
 384:	a6 cf       	rjmp	.-180    	; 0x2d2 <__fp_szero>
 386:	5f 3f       	cpi	r21, 0xFF	; 255
 388:	ec f3       	brlt	.-6      	; 0x384 <__mulsf3_pse+0x82>
 38a:	98 3e       	cpi	r25, 0xE8	; 232
 38c:	dc f3       	brlt	.-10     	; 0x384 <__mulsf3_pse+0x82>
 38e:	86 95       	lsr	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b7 95       	ror	r27
 396:	f7 95       	ror	r31
 398:	e7 95       	ror	r30
 39a:	9f 5f       	subi	r25, 0xFF	; 255
 39c:	c1 f7       	brne	.-16     	; 0x38e <__mulsf3_pse+0x8c>
 39e:	fe 2b       	or	r31, r30
 3a0:	88 0f       	add	r24, r24
 3a2:	91 1d       	adc	r25, r1
 3a4:	96 95       	lsr	r25
 3a6:	87 95       	ror	r24
 3a8:	97 f9       	bld	r25, 7
 3aa:	08 95       	ret

000003ac <__fp_inf>:
 3ac:	97 f9       	bld	r25, 7
 3ae:	9f 67       	ori	r25, 0x7F	; 127
 3b0:	80 e8       	ldi	r24, 0x80	; 128
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	08 95       	ret

000003b8 <__fp_nan>:
 3b8:	9f ef       	ldi	r25, 0xFF	; 255
 3ba:	80 ec       	ldi	r24, 0xC0	; 192
 3bc:	08 95       	ret

000003be <__fp_pscA>:
 3be:	00 24       	eor	r0, r0
 3c0:	0a 94       	dec	r0
 3c2:	16 16       	cp	r1, r22
 3c4:	17 06       	cpc	r1, r23
 3c6:	18 06       	cpc	r1, r24
 3c8:	09 06       	cpc	r0, r25
 3ca:	08 95       	ret

000003cc <__fp_pscB>:
 3cc:	00 24       	eor	r0, r0
 3ce:	0a 94       	dec	r0
 3d0:	12 16       	cp	r1, r18
 3d2:	13 06       	cpc	r1, r19
 3d4:	14 06       	cpc	r1, r20
 3d6:	05 06       	cpc	r0, r21
 3d8:	08 95       	ret

000003da <__fp_round>:
 3da:	09 2e       	mov	r0, r25
 3dc:	03 94       	inc	r0
 3de:	00 0c       	add	r0, r0
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <__fp_round+0xc>
 3e2:	88 23       	and	r24, r24
 3e4:	52 f0       	brmi	.+20     	; 0x3fa <__fp_round+0x20>
 3e6:	bb 0f       	add	r27, r27
 3e8:	40 f4       	brcc	.+16     	; 0x3fa <__fp_round+0x20>
 3ea:	bf 2b       	or	r27, r31
 3ec:	11 f4       	brne	.+4      	; 0x3f2 <__fp_round+0x18>
 3ee:	60 ff       	sbrs	r22, 0
 3f0:	04 c0       	rjmp	.+8      	; 0x3fa <__fp_round+0x20>
 3f2:	6f 5f       	subi	r22, 0xFF	; 255
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	08 95       	ret

000003fc <_exit>:
 3fc:	f8 94       	cli

000003fe <__stop_program>:
 3fe:	ff cf       	rjmp	.-2      	; 0x3fe <__stop_program>
